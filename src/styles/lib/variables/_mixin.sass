// BASIC PROPERTIES
=bn-property($pre, $suf, $values)
  $top: $pre + "-top" + if($suf, "-#{$suf}", "")
  $bottom: $pre + "-bottom" + if($suf, "-#{$suf}", "")
  $left: $pre + "-left" + if($suf, "-#{$suf}", "")
  $right: $pre + "-right" + if($suf, "-#{$suf}", "")
  $all: $pre + if($suf, "-#{$suf}", "")
  $values: get_array($values)
  @if check_list($values)
    @if nth($values, 1)
      #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
    @if length($values) == 1
      @if nth($values, 1)
        #{$right}: str-replace(#{nth($values, 1)}, "_", " !important")
    @else
      @if nth($values, 2)
        #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
    @if length($values) == 2
      @if nth($values, 1)
        #{$bottom}: str-replace(#{nth($values, 1)}, "_", " !important")
      @if nth($values, 2)
        #{$left}: str-replace(#{nth($values, 2)}, "_", " !important")
    @else if length($values) == 3
      @if nth($values, 3)
        #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
      @if nth($values, 2)
        #{$left}: str-replace(#{nth($values, 2)}, "_", " !important")
    @else if length($values) == 4
      @if nth($values, 3)
        #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
      @if nth($values, 4)
        #{$left}: str-replace(#{nth($values, 4)}, "_", " !important")
  @else
    @if length($values) == 1
      #{$all}: str-replace(#{$values}, "_", " !important")
    @else if length($values) == 2
      #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
      #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
      #{$bottom}: str-replace(#{nth($values, 1)}, "_", " !important")
      #{$left}: str-replace(#{nth($values, 2)}, "_", " !important")
    @else if length($values) == 3
      #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
      #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
      #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
    @else if length($values) == 4
      #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
      #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
      #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
      #{$left}: str-replace(#{nth($values, 4)}, "_", " !important")

// BORDER VARIABLES
=bn-setborder($pre, $suf, $type, $values)
  $top: $pre + "-top" + if($suf, "-#{$suf}", "")
  $bottom: $pre + "-bottom" + if($suf, "-#{$suf}", "")
  $left: $pre + "-left" + if($suf, "-#{$suf}", "")
  $right: $pre + "-right" + if($suf, "-#{$suf}", "")
  $all: $pre + if($suf, "-#{$suf}", "")
  $values: get_array($values)
  $getborder: solid transparent
  @if $type != null
    $getborder: str-replace(#{$type}, "solid", "sol")
    $getborder: str-replace(#{$getborder}, "sol", "solid")
    $getborder: str-replace(#{$getborder}, "dashed", "das")
    $getborder: str-replace(#{$getborder}, "das", "dashed")
    $getborder: str-replace(#{$getborder}, "dotted", "dot")
    $getborder: str-replace(#{$getborder}, "dot", "dotted")
    $getborder: str-replace(#{$getborder}, "double", "dou")
    $getborder: str-replace(#{$getborder}, "dou", "double")
    $getborder: str-replace(#{$getborder}, "none", "non")
    $getborder: str-replace(#{$getborder}, "non", "none")
  @if length($values) == 1
    #{$all}: #{$getborder} str-replace(#{$values}, "_", " !important")
  @else if length($values) == 2
    #{$pre}-top: #{$getborder} str-replace(#{nth($values, 1)}, "_", " !important")
    #{$pre}-right: #{$getborder} str-replace(#{nth($values, 2)}, "_", " !important")
    #{$pre}-bottom: #{$getborder} str-replace(#{nth($values, 1)}, "_", " !important")
    #{$pre}-left: #{$getborder} str-replace(#{nth($values, 2)}, "_", " !important")
  @else if length($values) == 3
    #{$pre}-top: #{$getborder} str-replace(#{nth($values, 1)}, "_", " !important")
    #{$pre}-right: #{$getborder} str-replace(#{nth($values, 2)}, "_", " !important")
    #{$pre}-bottom: #{$getborder} str-replace(#{nth($values, 3)}, "_", " !important")
  @else if length($values) == 4
    #{$pre}-top: #{$getborder} str-replace(#{nth($values, 1)}, "_", " !important")
    #{$pre}-right: #{$getborder} str-replace(#{nth($values, 2)}, "_", " !important")
    #{$pre}-bottom: #{$getborder} str-replace(#{nth($values, 3)}, "_", " !important")
    #{$pre}-left: #{$getborder} str-replace(#{nth($values, 4)}, "_", " !important")

// POSITON VARIABLES
=bn-setposition($pre, $suf, $values)
  $top:  "top"
  $bottom:  "bottom"
  $left:  "left"
  $right:  "right"
  $all:  $pre
  $values: get_array($values)
  $getborder: initial
  @if $suf != null
    $getborder: str-replace(#{$suf}, "relative", "rel")
    $getborder: str-replace(#{$getborder}, "rel", "relative")
    $getborder: str-replace(#{$getborder}, "absolute", "abs")
    $getborder: str-replace(#{$getborder}, "abs", "absolute")
    $getborder: str-replace(#{$getborder}, "fixed", "fix")
    $getborder: str-replace(#{$getborder}, "fix", "fixed")
    $getborder: str-replace(#{$getborder}, "static", "sta")
    $getborder: str-replace(#{$getborder}, "sta", "static")
    $getborder: str-replace(#{$getborder}, "inherit", "inh")
    $getborder: str-replace(#{$getborder}, "non", "inherit")
  #{$all}: #{$getborder}
  @if length($values) == 1
    #{$top}: str-replace(#{$values}, "_", " !important")
  @else if length($values) == 2
    #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
    #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
  @else if length($values) == 3
    #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
    #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
    #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
  @else if length($values) == 4
    #{$top}: str-replace(#{nth($values, 1)}, "_", " !important")
    #{$right}: str-replace(#{nth($values, 2)}, "_", " !important")
    #{$bottom}: str-replace(#{nth($values, 3)}, "_", " !important")
    #{$left}: str-replace(#{nth($values, 4)}, "_", " !important")
